{"version":3,"sources":["secondsToTimerFormat.tsx","Interfaces.tsx","Feed.tsx","GoalCustomization.tsx","AllDotaItems.tsx","RoleCustomization.tsx","RoshTimer.tsx","Customization.tsx","AllSounds.tsx","InitialAppState.tsx","NeutralLabelDictionary.tsx","Timer.tsx","useInterval.tsx","App.tsx","index.tsx"],"names":["secondsToTimerFormat","seconds","asPositive","Math","abs","minutes","floor","secs","SoundType","Feed","props","className","notificationFeed","reverse","map","n","timeOfNotification","time","notificationHeading","subtext","Notification","allDotaItems","sort","GoalCustomization","useState","selectedItem","itemMinuteValue","itemSecondValue","lastHitTarget","lastHitMinuteValue","lastHitSecondValue","goalCustomizationState","setGoalCustomizationState","valueIsNotAValidShortNumber","value","characters","split","length","filter","c","includes","valueIsNotAValidShortNumberSeconds","onChange","e","state","target","options","selectedIndex","i","onClick","addItemGoalButtonWasPressed","Number","itemGoals","g","index","itemGoalDeleteButtonWasPressed","item","addLastHitGoalButtonWasPressed","lastHitGoals","lastHitGoalDeleteButtonWasPressed","numberOfLastHits","lastHits","ItemGoal","id","LastHitGoal","RoleCustomization","checked","team","setTeamFunction","type","name","lane","setLaneFunction","AegisTimer","roshanResetButtonPressed","roshanDiedButtonWasPressed","roshanTimerTime","Customization","allSoundBanks","b","soundType","NormalSound","soundBankEnabled","enabled","soundEnableToggled","soundBankTitle","soundLabels","sounds","s","previewButtonPressed","soundOptionChanged","allPullSoundBanks","PullSound","SoundOption","o","htmlFor","allSounds","bountySounds","sound","Audio","selected","neutralSounds","aghsShardSounds","roshanMaybeSounds","roshanDefinitelySounds","lastHitSounds","itemSounds","powerRuneSounds","siegeWaveSounds","stackTimeSounds","outpostSounds","tomeSounds","aegisSounds","pullSounds","direSafeLaneSmallCampPull","direSafeLaneSmallCampPullB","direSafeLaneMediumCampPull","direSafeLaneMediumCampPullB","direOffLaneMediumCampPull","direOffLaneMediumCampPullB","RadiantSafeLaneMediumCampPull","RadiantSafeLaneMediumCampPullB","RadiantSafeLaneSmallCampPull","RadiantSafeLaneSmallCampPullB","RadiantOffLaneMediumCampPull","RadiantOffLaneMediumCampPullB","initialAppState","timerShouldTick","roshan","isDead","timeOfDeath","neutralLabelDictionary","420","1020","1620","2220","3600","Timer","intervalFunction","interval","savedIntervalFunction","useRef","useEffect","current","intervalIdentifier","setInterval","clearInterval","useInterval","tick","shouldTick","rollTimerBackFunction","pushTimerForwardFunction","toggleTimerFunction","App","setState","addNotification","newNotification","playSoundBankSoundIfEnabled","soundBank","soundBankArr","find","play","newTime","isLastHitGoalTime","isRoshanEarliestTime","isRoshanLatestTime","aegisHasExpired","isOutpostTime","isStackTime","isPowerRuneTime","isSiegeCreepTime","isBountyRuneTime","isAghsShardTime","undefined","isNeutralItemTime","isTomeTime","by","currentState","to","changedTo","bank","updatedSoundBank","isChecked","console","log","arguments","soundArr","newLastHitGoals","_","lastHitGoal","newlastHitGoalsArray","newItemGoalsArray","newItemGoals","newRoshanState","ReactDOM","render","document","getElementById"],"mappings":"wOAAO,SAASA,EAAqBC,GACjC,GAAIA,EAAS,EAAG,CACZ,IAAMC,EAAaC,KAAKC,IAAIH,GACtBI,EAAUF,KAAKG,MAAMJ,EAAa,IAClCK,EAAOL,EAAuB,GAAVG,EAG1B,OAFeA,EAAU,GAAK,IAAM,IAEpBA,EAAU,KADXE,EAAO,GAAK,IAAM,IACQA,EAEzC,IAAMF,EAAUF,KAAKG,MAAML,EAAU,IAC/BM,EAAON,EAAoB,GAAVI,EAGvB,OAFeA,EAAU,GAAK,IAAM,IAEpBA,EAAU,KADXE,EAAO,GAAK,IAAM,IACQA,E,ICarCC,E,OCpBCC,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,OAAf,UACI,+CACC,YAAID,EAAME,kBAAkBC,UAAUC,KACnC,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAcC,mBAAoBD,EAAEE,KAAMC,oBAAqBH,EAAEG,oBAAqBC,QAASJ,EAAEI,iBAYzGC,EAAe,SAACV,GACzB,OACI,sBAAKC,UAAU,eAAf,UACI,6BAAKD,EAAMQ,sBACX,mBAAGP,UAAU,uBAAb,SAAqCD,EAAMS,UAC3C,mBAAGR,UAAU,oBAAb,SAAkCX,EAAqBU,EAAMM,0B,OCXnEK,G,MChBN,CAAC,gBACD,UACA,kBACA,kBACA,cACA,cACA,oBACA,qBACA,QACA,qBACA,gBACA,SACA,kBACA,cACA,wBACA,yBACA,sBACA,UACA,oBACA,mBACA,QACA,mBACA,oBACA,WACA,oBACA,iBACA,qBACA,oBACA,eACA,eACA,mBACA,kBACA,YACA,eACA,oBACA,iBACA,aACA,UACA,WACA,iBACA,gBACA,cACA,cACA,aACA,YACA,iBACA,QACA,cACA,oBACA,cACA,gBACA,gBACA,eACA,iBACA,aACA,iBACA,mBACA,gBACA,YACA,sBACA,aACA,eACA,aACA,YACA,eACA,SACA,eACA,aACA,SACA,gBACA,cACA,YACA,mBACA,eACA,eACA,iBACA,cACA,eACA,kBACA,gBACA,wBACA,0BACA,kBACA,aACA,UACA,YACA,mBACA,iBACA,iBACA,uBACA,eACA,oBACA,UACA,cACA,qBACA,gBACA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","file":"static/js/main.acf11107.chunk.js","sourcesContent":["export function secondsToTimerFormat(seconds: number) {\r\n    if (seconds <0) {\r\n        const asPositive = Math.abs(seconds)\r\n        const minutes = Math.floor(asPositive / 60)\r\n        const secs = asPositive - minutes * 60\r\n        const preMin = minutes < 10 ? \"0\" : \"\"\r\n        const preSec = secs < 10 ? \"0\" : \"\"\r\n        return preMin + minutes + \":\" + preSec + secs\r\n    } else {\r\n        const minutes = Math.floor(seconds / 60)\r\n        const secs = seconds - minutes * 60\r\n        const preMin = minutes < 10 ? \"0\" : \"\"\r\n        const preSec = secs < 10 ? \"0\" : \"\"\r\n        return preMin + minutes + \":\" + preSec + secs\r\n    }\r\n}","export interface TimerProps {\r\n    time: number\r\n    shouldTick: boolean\r\n    tick: () => void\r\n    rollTimerBackFunction: (by: number) => void\r\n    pushTimerForwardFunction: (by: number) => void\r\n    toggleTimerFunction: () => void\r\n}\r\n\r\nexport interface AppState {\r\n    time: number\r\n    timerShouldTick: boolean\r\n    sounds: {soundBankTitle: string, enabled: boolean, sounds: {name: string, sound: HTMLAudioElement, selected: boolean}[]}[]\r\n    roshan: {isDead: boolean, timeOfDeath: null | number}\r\n    lane: Lane,\r\n    team: Team\r\n    itemGoals: {item: string, time: number}[]\r\n    lastHitGoals: {lastHits: number, time: number}[]\r\n    pullSounds: {soundBankTitle: string, enabled: boolean, sounds: {name: string, sound: HTMLAudioElement, selected: boolean}[]}[]\r\n    notificationFeed: {notificationHeading: string, subtext: string, time: number}[]\r\n}\r\n\r\nexport type Lane = \"SafeLane\" | \"OffLane\" | \"Mid\"\r\n\r\nexport type Team = \"Dire\" | \"Radiant\"\r\n\r\nexport enum SoundType {\r\n    NormalSound, \r\n    PullSound\r\n}","import { secondsToTimerFormat } from 'secondsToTimerFormat'\r\n\r\ninterface FeedProps {\r\n    notificationFeed: {notificationHeading: string, subtext: string, time: number}[]\r\n}\r\n\r\nexport const Feed = (props: FeedProps) => {\r\n    return (\r\n        <div className=\"feed\">\r\n            <h1>Notifications</h1>\r\n            {[...props.notificationFeed].reverse().map(\r\n                n => <Notification timeOfNotification={n.time} notificationHeading={n.notificationHeading} subtext={n.subtext}></Notification>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface NotificationProps {\r\n    notificationHeading: string\r\n    subtext: string\r\n    timeOfNotification: number\r\n}\r\n\r\nexport const Notification = (props: NotificationProps ) => {\r\n    return (\r\n        <div className=\"notification\">\r\n            <h1>{props.notificationHeading}</h1>\r\n            <p className=\"notification-subtext\">{props.subtext}</p>\r\n            <p className=\"notification-time\">{secondsToTimerFormat(props.timeOfNotification)}</p>\r\n        </div>\r\n    )\r\n}","import { allItemNames } from \"AllDotaItems\";\r\nimport { pullSounds } from \"AllSounds\";\r\nimport { Lane, Team } from \"Interfaces\";\r\nimport { useState } from \"react\"\r\nimport { secondsToTimerFormat } from \"secondsToTimerFormat\"\r\nimport { isConstructorDeclaration } from \"typescript\";\r\nimport './GoalCustomization.scss';\r\n\r\ninterface GoalCustomizationProps {\r\n    itemGoals: {item: string, time: number}[]\r\n    lastHitGoals: {lastHits: number, time: number}[]\r\n    itemGoalDeleteButtonWasPressed: (index: number) => void\r\n    addItemGoalButtonWasPressed: (item: string, time: number) => void\r\n    lastHitGoalDeleteButtonWasPressed: (index: number) => void\r\n    addLastHitGoalButtonWasPressed: (lastHitGoal: number, time: number) => void\r\n}\r\n\r\nconst allDotaItems = allItemNames.sort()\r\n\r\nexport const GoalCustomization = (props: GoalCustomizationProps) => {\r\n\r\n    const [goalCustomizationState, setGoalCustomizationState] = useState({selectedItem: allDotaItems[0], itemMinuteValue: \"00\", itemSecondValue: \"00\", lastHitTarget: \"60\", lastHitMinuteValue: \"10\", lastHitSecondValue: \"00\"})\r\n\r\n    function getNumberOfSecondsFromCurrentStateForItems() {\r\n        return Number((Number(goalCustomizationState.itemMinuteValue) * 60) + Number(goalCustomizationState.itemSecondValue))\r\n    }\r\n\r\n    function getNumberOfSecondsFromCurrentStateForLastHits() {\r\n        return Number((Number(goalCustomizationState.lastHitMinuteValue) * 60) + Number(goalCustomizationState.lastHitSecondValue))\r\n    }\r\n\r\n    function valueIsNotAValidShortNumber(value: string) {\r\n        const characters = value.split('')\r\n        return characters.length > 4 || characters.filter( c => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(c)).length !== characters.length\r\n    }\r\n\r\n    function valueIsNotAValidShortNumberSeconds(value: string) {\r\n        const characters = value.split('')\r\n        return characters.length > 2 || characters.filter( c => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(c)).length !== characters.length\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>ITEM GOAL</h2>\r\n            <div className=\"item-goal-select\">\r\n            <select className=\"drop-down\" onChange={ e => (setGoalCustomizationState( state => ({...state, selectedItem: e.target.options[e.target.options.selectedIndex].value})))}>\r\n                {allDotaItems.map( i => <option>{i}</option>)}\r\n            </select>\r\n            <label>by</label>\r\n            <input className=\"text\" onChange={ e => valueIsNotAValidShortNumber(e.target.value) ? null : (setGoalCustomizationState( state => ({...state, itemMinuteValue: e.target.value})))} value={goalCustomizationState.itemMinuteValue}></input>\r\n            <label>:</label>\r\n            <input className=\"text\" onChange={ e => valueIsNotAValidShortNumberSeconds(e.target.value) ? null : (setGoalCustomizationState( state => ({...state, itemSecondValue: e.target.value})))} value={goalCustomizationState.itemSecondValue}></input>\r\n            <button className=\"add-button\" onClick={() => props.addItemGoalButtonWasPressed(goalCustomizationState.selectedItem, getNumberOfSecondsFromCurrentStateForItems())}></button>\r\n            </div>\r\n\r\n            {props.itemGoals.map( (g, index) => <ItemGoal itemGoalDeleteButtonWasPressed={props.itemGoalDeleteButtonWasPressed} item={g.item} time={g.time} index={index}></ItemGoal>)}    \r\n\r\n            <hr></hr>\r\n            <h2>LAST HIT GOAL</h2>\r\n            <div className=\"item-goal-select\">\r\n            <input className=\"text\" onChange={ e => valueIsNotAValidShortNumber(e.target.value) ? null : (setGoalCustomizationState( state => ({...state, lastHitTarget: e.target.value})))} value={goalCustomizationState.lastHitTarget}></input>\r\n            <label>last hits by</label>\r\n            <input className=\"text\" onChange={ e => valueIsNotAValidShortNumber(e.target.value) ? null : (setGoalCustomizationState( state => ({...state, lastHitMinuteValue: e.target.value})))} value={goalCustomizationState.lastHitMinuteValue}></input>\r\n            <label>:</label>\r\n            <input className=\"text\"  onChange={ e => valueIsNotAValidShortNumberSeconds(e.target.value) ? null : (setGoalCustomizationState( state => ({...state, lastHitSecondValue: e.target.value})))} value={goalCustomizationState.lastHitSecondValue}></input>\r\n            <button className=\"add-button\" onClick={() => props.addLastHitGoalButtonWasPressed(Number(goalCustomizationState.lastHitTarget), getNumberOfSecondsFromCurrentStateForLastHits())}></button> \r\n            </div>\r\n            {props.lastHitGoals.map( (g, i) => <LastHitGoal lastHitGoalDeleteButtonWasPressed={props.lastHitGoalDeleteButtonWasPressed} numberOfLastHits={g.lastHits} time={g.time} index={i}></LastHitGoal>)}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface ItemGoalProps {\r\n    item: string\r\n    time: number\r\n    index: number\r\n    itemGoalDeleteButtonWasPressed: (index: number) => void\r\n}\r\n\r\nexport const ItemGoal = (props: ItemGoalProps) => {\r\n    return (\r\n        <div id=\"item-goal\">\r\n            <p className=\"goal\">Buy {props.item} by {secondsToTimerFormat(props.time)}</p>\r\n            <button className=\"delete-button\" onClick={() => props.itemGoalDeleteButtonWasPressed(props.index)}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface LastHitGoalProps {\r\n    numberOfLastHits: number\r\n    time: number\r\n    index: number\r\n    lastHitGoalDeleteButtonWasPressed: (index: number) => void\r\n}\r\n\r\nexport const LastHitGoal = (props: LastHitGoalProps) => {\r\n    return (\r\n        <div id=\"last-hit-goal\">\r\n            <p className=\"goal\">Get {props.numberOfLastHits} last hits by {secondsToTimerFormat(props.time)}</p>\r\n            <button className=\"delete-button\" onClick={() => props.lastHitGoalDeleteButtonWasPressed(props.index)}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n//null and void","export const allItemNames = \r\n[\"Observer Ward\",\r\n\"Clarity\",\r\n\"Smoke of Deceit\",\r\n\"Enchanted Mango\",\r\n\"Faerie Fire\",\r\n\"Sentry Ward\",\r\n\"Tome of Knowledge\",\r\n\"Dust of Appearance\",\r\n\"Tango\",\r\n\"Town Portal Scroll\",\r\n\"Healing Salve\",\r\n\"Bottle\",\r\n\"Aghanim's Shard\",\r\n\"Iron Branch\",\r\n\"Gauntlets of Strength\",\r\n\"Mantle of Intelligence\",\r\n\"Slippers of Agility\",\r\n\"Circlet\",\r\n\"Band of Elvenskin\",\r\n\"Belt of Strength\",\r\n\"Crown\",\r\n\"Robe of the Magi\",\r\n\"Blade of Alacrity\",\r\n\"Ogre Axe\",\r\n\"Staff of Wizardry\",\r\n\"Quelling Blade\",\r\n\"Ring of Protection\",\r\n\"Infused Raindrops\",\r\n\"Orb of Venom\",\r\n\"Blight Stone\",\r\n\"Blades of Attack\",\r\n\"Gloves of Haste\",\r\n\"Chainmail\",\r\n\"Quarterstaff\",\r\n\"Helm of Iron Will\",\r\n\"Blitz Knuckles\",\r\n\"Broadsword\",\r\n\"Javelin\",\r\n\"Claymore\",\r\n\"Mithril Hammer\",\r\n\"Ring of Regen\",\r\n\"Sage's Mask\",\r\n\"Magic Stick\",\r\n\"Fluffy Hat\",\r\n\"Wind Lace\",\r\n\"Boots of Speed\",\r\n\"Cloak\",\r\n\"Voodoo Mask\",\r\n\"Gem of True Sight\",\r\n\"Morbid Mask\",\r\n\"Shadow Amulet\",\r\n\"Ghost Scepter\",\r\n\"Blink Dagger\",\r\n\"Ring of Health\",\r\n\"Void Stone\",\r\n\"Energy Booster\",\r\n\"Vitality Booster\",\r\n\"Point Booster\",\r\n\"Platemail\",\r\n\"Talisman of Evasion\",\r\n\"Hyperstone\",\r\n\"Ultimate Orb\",\r\n\"Demon Edge\",\r\n\"Eaglesong\",\r\n\"Mystic Staff\",\r\n\"Reaver\",\r\n\"Sacred Relic\",\r\n\"Magic Wand\",\r\n\"Bracer\",\r\n\"Null Talisman\",\r\n\"Wraith Band\",\r\n\"Soul Ring\",\r\n\"Orb of Corrosion\",\r\n\"Falcon Blade\",\r\n\"Power Treads\",\r\n\"Oblivion Staff\",\r\n\"Phase Boots\",\r\n\"Perseverance\",\r\n\"Mask of Madness\",\r\n\"Hand of Midas\",\r\n\"Helm of the Dominator\",\r\n\"Helm of the Dominator 1\",\r\n\"Boots of Travel\",\r\n\"Moon Shard\",\r\n\"Buckler\",\r\n\"Headdress\",\r\n\"Ring of Basilius\",\r\n\"Urn of Shadows\",\r\n\"Tranquil Boots\",\r\n\"Medallion of Courage\",\r\n\"Arcane Boots\",\r\n\"Drum of Endurance\",\r\n\"Mekansm\",\r\n\"Holy Locket\",\r\n\"Vladmir's Offering\",\r\n\"Spirit Vessel\",\r\n\"Pipe of Insight\",\r\n\"Guardian Greaves\",\r\n\"Veil of Discord\",\r\n\"Glimmer Cape\",\r\n\"Necronomicon\",\r\n\"Force Staff\",\r\n\"Aether Lens\",\r\n\"Witch Blade\",\r\n\"Eul's Scepter of Divinity\",\r\n\"Dagon\",\r\n\"Rod of Atos\",\r\n\"Orchid Malevolence\",\r\n\"Solar Crest\",\r\n\"Aghanim's Scepter\",\r\n\"Refresher Orb\",\r\n\"Octarine Core\",\r\n\"Scythe of Vyse\",\r\n\"Aghanim's Blessing\",\r\n\"Gleipnir\",\r\n\"Wind Waker\",\r\n\"Hood of Defiance\",\r\n\"Vanguard\",\r\n\"Blade Mail\",\r\n\"Aeon Disk\",\r\n\"Soul Booster\",\r\n\"Eternal Shroud\",\r\n\"Crimson Guard\",\r\n\"Lotus Orb\",\r\n\"Black King Bar\",\r\n\"Hurricane Pike\",\r\n\"Linken's Sphere\",\r\n\"Manta Style\",\r\n\"Heart of Tarrasque\",\r\n\"Shiva's Guard\",\r\n\"Assault Cuirass\",\r\n\"Bloodstone\",\r\n\"Crystalys\",\r\n\"Meteor Hammer\",\r\n\"Armlet of Mordiggian\",\r\n\"Skull Basher\",\r\n\"Shadow Blade\",\r\n\"Desolator\",\r\n\"Battle Fury\",\r\n\"Ethereal Blade\",\r\n\"Nullifier\",\r\n\"Monkey King Bar\",\r\n\"Butterfly\",\r\n\"Daedalus\",\r\n\"Radiance\",\r\n\"Silver Edge\",\r\n\"Divine Rapier\",\r\n\"Bloodthorn\",\r\n\"Abyssal Blade\",\r\n\"Dragon Lance\",\r\n\"Kaya\",\r\n\"Sange\",\r\n\"Yasha\",\r\n\"Echo Sabre\",\r\n\"Maelstrom\",\r\n\"Diffusal Blade\",\r\n\"Mage Slayer\",\r\n\"Heaven's Halberd\",\r\n\"Kaya and Sange\",\r\n\"Sange and Yasha\",\r\n\"Yasha and Kaya\",\r\n\"Satanic\",\r\n\"Eye of Skadi\",\r\n\"Mjollnir\",\r\n\"Arcane Blink\",\r\n\"Overwhelming Blink\",\r\n\"Swift Blink\"]\r\n\r\n\r\n","import { Lane, Team } from \"Interfaces\"\r\n\r\ninterface RoleCustomizationProps {\r\n    lane: Lane\r\n    team: Team\r\n    setLaneFunction: (newLane: Lane) => void\r\n    setTeamFunction: (newTeam: Team) => void\r\n}\r\n\r\nexport const RoleCustomization = (props: RoleCustomizationProps) => {\r\n\r\n    return (\r\n        <div id=\"role-selection\">\r\n            <div className=\"radio-select\">\r\n\r\n            <label className=\"radio-container\">Radiant\r\n            <input checked={props.team === \"Radiant\"} onChange={ () => props.setTeamFunction(\"Radiant\" as Team)} className=\"radio-button\" type=\"radio\" name=\"teamSelect\" value=\"Radiant\"></input>\r\n            <span className=\"inner-radio\"></span>\r\n            </label>\r\n\r\n            <label className=\"radio-container\">Dire\r\n            <input checked={props.team === \"Dire\"} onChange={ () => props.setTeamFunction(\"Dire\" as Team)} className=\"radio-button\" type=\"radio\" name=\"teamSelect\" value=\"Dire\"></input>\r\n            <span className=\"inner-radio\"></span>\r\n            </label>\r\n            </div>\r\n\r\n            <div className=\"radio-select\">\r\n\r\n            <label className=\"radio-container\">Safe-Lane\r\n            <input checked={props.lane === \"SafeLane\"} onChange={ () => props.setLaneFunction(\"SafeLane\" as Lane)} className=\"radio-button\" type=\"radio\" name=\"laneSelect\" value=\"SafeLane\"></input>\r\n            <span className=\"inner-radio\"></span>\r\n            </label>\r\n\r\n            <label className=\"radio-container\">Off-Lane\r\n            <input checked={props.lane === \"OffLane\"} onChange={ () => props.setLaneFunction(\"OffLane\" as Lane)} className=\"radio-button\" type=\"radio\" name=\"laneSelect\" value=\"OffLane\"></input>\r\n            <span className=\"inner-radio\"></span>\r\n            </label>\r\n\r\n            <label className=\"radio-container\">Mid\r\n            <input checked={props.lane === \"Mid\"} onChange={ () => props.setLaneFunction(\"Mid\" as Lane)} className=\"radio-button\" type=\"radio\" name=\"laneSelect\" value=\"Mid\"></input>\r\n            <span className=\"inner-radio\"></span>\r\n            </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { secondsToTimerFormat } from \"secondsToTimerFormat\"\r\n\r\ninterface AegisTimerProps {\r\n    roshanResetButtonPressed: () => void\r\n    roshanDiedButtonWasPressed: () => void\r\n    roshanTimerTime: number\r\n}\r\n\r\n\r\nexport const AegisTimer = (props: AegisTimerProps) => {\r\n    return (\r\n        <div>\r\n            <h1>Roshan Timer</h1>\r\n            <button onClick={() => props.roshanResetButtonPressed()}>Reset</button>\r\n            <button onClick={() => props.roshanDiedButtonWasPressed()}>Roshan Died</button>\r\n            <p>{secondsToTimerFormat(props.roshanTimerTime)}</p>\r\n        </div>\r\n    )\r\n}","import { SoundType } from \"Interfaces\"\r\n\r\ninterface CustomizationProps {\r\n    team: string\r\n    lane: string\r\n    allSoundBanks: {soundBankTitle: string, enabled: boolean, sounds: {name: string, sound: HTMLAudioElement, selected: Boolean}[]}[]\r\n    previewButtonPressed: (soundBank: string, soundType: SoundType) => void\r\n    soundOptionChanged: (soundBank: string, changedTo: string, soundType: SoundType) => void\r\n    soundEnableToggled: (soundBank: string, soundType: SoundType, isChecked: boolean) => void\r\n    allPullSoundBanks: {soundBankTitle: string, enabled: boolean, sounds: {name: string, sound: HTMLAudioElement, selected: Boolean}[]}[]\r\n}\r\n\r\nexport const Customization = (props: CustomizationProps) => \r\n    <div id=\"main-sound-customization\">\r\n        {props.allSoundBanks.map(b => <SoundOption soundType={SoundType.NormalSound} soundBankEnabled={b.enabled} soundEnableToggled={props.soundEnableToggled} soundBankTitle={b.soundBankTitle} soundLabels={b.sounds.map(s => s.name)} previewButtonPressed={props.previewButtonPressed} soundOptionChanged={props.soundOptionChanged}></SoundOption>)}\r\n        \r\n        {props.team === \"Radiant\" && props.lane === \"SafeLane\" && \r\n        props.allPullSoundBanks.filter( b => [\"Radiant SafeLane Medium Camp Pull\", \"Radiant SafeLane Medium Camp Pull B\", \"Radiant SafeLane Small Camp Pull\", \"Radiant SafeLane Small Camp Pull B\"].includes(b.soundBankTitle))\r\n        .map( s => <SoundOption soundType={SoundType.PullSound} soundBankEnabled={s.enabled} soundEnableToggled={props.soundEnableToggled} soundBankTitle={s.soundBankTitle} soundLabels={ s.sounds.map( e => e.name)} previewButtonPressed={props.previewButtonPressed} soundOptionChanged={props.soundOptionChanged}></SoundOption>)\r\n        }\r\n\r\n        {props.team === \"Radiant\" && props.lane === \"OffLane\" &&\r\n        props.allPullSoundBanks.filter( b => [\"Radiant OffLane Medium Camp Pull\", \"Radiant OffLane Medium Camp Pull B\"].includes(b.soundBankTitle))\r\n        .map( s => <SoundOption soundType={SoundType.PullSound} soundBankEnabled={s.enabled} soundEnableToggled={props.soundEnableToggled} soundBankTitle={s.soundBankTitle} soundLabels={ s.sounds.map( e => e.name)} previewButtonPressed={props.previewButtonPressed} soundOptionChanged={props.soundOptionChanged}></SoundOption>)\r\n        }\r\n\r\n        {props.team === \"Dire\" && props.lane === \"SafeLane\" &&\r\n        props.allPullSoundBanks.filter( b => [\"Dire SafeLane Small Camp Pull\", \"Dire SafeLane Small Camp Pull B\", \"Dire SafeLane Medium Camp Pull\", \"Dire SafeLane Medium Camp Pull B\"].includes(b.soundBankTitle))\r\n        .map( s => <SoundOption soundType={SoundType.PullSound} soundBankEnabled={s.enabled} soundEnableToggled={props.soundEnableToggled} soundBankTitle={s.soundBankTitle} soundLabels={ s.sounds.map( e => e.name)} previewButtonPressed={props.previewButtonPressed} soundOptionChanged={props.soundOptionChanged}></SoundOption>)\r\n        }\r\n\r\n        {props.team === \"Dire\" && props.lane === \"OffLane\" &&\r\n        props.allPullSoundBanks.filter( b => [\"Dire OffLane Medium Camp Pull\", \"Dire OffLane Medium Camp Pull B\"].includes(b.soundBankTitle))\r\n        .map( s => <SoundOption soundType={SoundType.PullSound} soundBankEnabled={s.enabled} soundEnableToggled={props.soundEnableToggled} soundBankTitle={s.soundBankTitle} soundLabels={ s.sounds.map( e => e.name)} previewButtonPressed={props.previewButtonPressed} soundOptionChanged={props.soundOptionChanged}></SoundOption>)\r\n        }\r\n        <hr></hr>\r\n    </div>\r\n\r\ninterface SoundOptionProps {\r\n    soundBankTitle: string\r\n    soundBankEnabled: boolean\r\n    soundLabels: string[]\r\n    previewButtonPressed: (soundBank: string, soundType: SoundType) => void\r\n    soundOptionChanged: (soundBank: string, changedTo: string, soundType: SoundType) => void\r\n    soundEnableToggled: (soundBank: string, soundType: SoundType, isChecked: boolean) => void\r\n    soundType: SoundType\r\n}\r\n\r\nexport const SoundOption = (props: SoundOptionProps) => {\r\n    return (\r\n        <div className=\"sound-option\">\r\n            <label className=\"checkbox-container\">\r\n            <input className=\"check\" type=\"checkbox\" onChange={e => props.soundEnableToggled(props.soundBankTitle, props.soundType, e.target.checked)} checked={props.soundBankEnabled}/>\r\n            <span className=\"check-mark\"></span>\r\n            </label>\r\n            <button className=\"preview-button\" onClick={ () => props.previewButtonPressed(props.soundBankTitle, props.soundType)} ></button>\r\n            <select className=\"drop-down\" onChange={ e => (props.soundOptionChanged(props.soundBankTitle, e.target.options[e.target.options.selectedIndex].value, props.soundType))} id={props.soundBankTitle}>\r\n                {props.soundLabels.map( o => <option value={o}>{o}</option>)}\r\n            </select>\r\n            <label htmlFor={props.soundBankTitle}>{props.soundBankTitle}</label>\r\n        </div>\r\n    )\r\n}","export const allSounds = {\r\n    bountySounds: {\r\n        soundBankTitle: \"Bounty Rune Spawned\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('bounty-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('bounty.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n\r\n    neutralSounds: {\r\n        soundBankTitle: \"New Neutral Items Spawned\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('neutrals-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('neutral.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    aghsShardSounds: {\r\n        soundBankTitle: \"Aghanim's Shard Available\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('aghanim-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('aghanim.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    roshanMaybeSounds: {\r\n        soundBankTitle: \"Earliest Roshan Spawn Time\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('roshanMaybe-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('roshanMaybe.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    roshanDefinitelySounds: {\r\n        soundBankTitle: \"Latest Roshan Spawn Time\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('roshanDefinitely-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('roshanDefinitely.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}    \r\n        ]\r\n    },\r\n    lastHitSounds: {\r\n        soundBankTitle: \"Last Hit Goal\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('cs-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('cs.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    itemSounds: {\r\n        soundBankTitle: \"Item Goal\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('item-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('item.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    powerRuneSounds: {\r\n        soundBankTitle: \"Power Rune Spawned\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('powerRunes-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('powerRunes.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    siegeWaveSounds: {\r\n        soundBankTitle: \"Siege Creep has spawned\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('siege-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('siege.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    stackTimeSounds: {\r\n        soundBankTitle: \"Time to stack\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('stack-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('stack.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n\r\n    outpostSounds: {\r\n        soundBankTitle: \"Outpost Time\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('outpost-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('outpost.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    tomeSounds: {\r\n        soundBankTitle: \"Tome is ready\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('tome-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('tome.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n\r\n    aegisSounds: {\r\n        soundBankTitle: \"Aegis has expired\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('aegis-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('aegis.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n}\r\n\r\nexport const pullSounds = {\r\n    direSafeLaneSmallCampPull: {\r\n        soundBankTitle: \"Dire SafeLane Small Camp Pull\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('smallAt15-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('smallAt15.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    direSafeLaneSmallCampPullB: {\r\n        soundBankTitle: \"Dire SafeLane Small Camp Pull B\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('smallAt45-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('smallAt45.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    direSafeLaneMediumCampPull: {\r\n        soundBankTitle: \"Dire SafeLane Medium Camp Pull\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt26-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt26.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    direSafeLaneMediumCampPullB: {\r\n        soundBankTitle: \"Dire SafeLane Medium Camp Pull B\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt56-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt56.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    direOffLaneMediumCampPull: {\r\n        soundBankTitle: \"Dire OffLane Medium Camp Pull\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt1719-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt1719.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    direOffLaneMediumCampPullB: {\r\n        soundBankTitle: \"Dire OffLane Medium Camp Pull B\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt4749-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt4749.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    RadiantSafeLaneMediumCampPull: {\r\n        soundBankTitle: \"Radiant SafeLane Medium Camp Pull\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt26-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt26.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    RadiantSafeLaneMediumCampPullB: {\r\n        soundBankTitle: \"Radiant SafeLane Medium Camp Pull B\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt56-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt56.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    RadiantSafeLaneSmallCampPull: {\r\n        soundBankTitle: \"Radiant SafeLane Small Camp Pull\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('smallAt15-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('smallAt15.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    RadiantSafeLaneSmallCampPullB: {\r\n        soundBankTitle: \"Radiant SafeLane Small Camp Pull B\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('smallAt45-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('smallAt45.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    RadiantOffLaneMediumCampPull: {\r\n        soundBankTitle: \"Radiant OffLane Medium Camp Pull\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt19-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt19.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    },\r\n    RadiantOffLaneMediumCampPullB: {\r\n        soundBankTitle: \"Radiant OffLane Medium Camp Pull B\",\r\n        enabled: true,\r\n        sounds: [\r\n            { name: 'Robot', sound: new Audio('mediumAt49-tts.mp3'), selected: false},\r\n            { name: 'Spoken Word', sound: new Audio('mediumAt49.mp3'), selected: true},\r\n            { name: 'Generic', sound: new Audio('generic.mp3'), selected: false}\r\n        ]\r\n    }\r\n}\r\n\r\nexport const allPullSoundBanks = [\r\n    pullSounds.RadiantOffLaneMediumCampPull, \r\n    pullSounds.RadiantOffLaneMediumCampPullB, \r\n    pullSounds.RadiantSafeLaneMediumCampPull,\r\n     pullSounds.RadiantSafeLaneMediumCampPullB, \r\n     pullSounds.RadiantSafeLaneSmallCampPull, \r\n     pullSounds.RadiantSafeLaneSmallCampPullB, \r\n     pullSounds.direOffLaneMediumCampPull, \r\n     pullSounds.direOffLaneMediumCampPullB, \r\n     pullSounds.direSafeLaneMediumCampPull, \r\n     pullSounds.direSafeLaneMediumCampPullB,\r\n     pullSounds.direSafeLaneSmallCampPull, \r\n     pullSounds.direSafeLaneSmallCampPullB\r\n]\r\n\r\nexport type SoundBankName = \r\n\"Bounty Rune Spawned\" \r\n| \"New Neutral Items Spawned\" \r\n| \"Aghanim's Shard Available\" \r\n| \"Earliest Roshan Spawn Time\" \r\n| \"Latest Roshan Spawn Time\" \r\n| \"Last Hit Goal\"\r\n| \"Item Goal\"\r\n| \"Power Rune Spawned\"\r\n| \"Siege Creep has spawned\"\r\n| \"Time to stack\"\r\n| \"Time to pull\"\r\n| \"Outpost Time\"\r\n| \"Tome is ready\"\r\n| \"Aegis has expired\"\r\n| \"Dire SafeLane Small Camp Pull\"\r\n| \"Dire SafeLane Small Camp Pull B\"\r\n| \"Dire SafeLane Medium Camp Pull\"\r\n| \"Dire SafeLane Medium Camp Pull B\"\r\n| \"Dire OffLane Medium Camp Pull\"\r\n| \"Dire OffLane Medium Camp Pull B\"\r\n| \"Radiant SafeLane Medium Camp Pull\"\r\n| \"Radiant SafeLane Medium Camp Pull B\"\r\n| \"Radiant SafeLane Small Camp Pull\"\r\n| \"Radiant SafeLane Small Camp Pull B\"\r\n| \"Radiant OffLane Medium Camp Pull\"\r\n| \"Radiant OffLane Medium Camp Pull B\"\r\n\r\nexport type allSoundsKeys = keyof typeof allSounds\r\n\r\nexport const allSoundBanks = [\r\n    allSounds.aghsShardSounds, \r\n    allSounds.bountySounds, \r\n    allSounds.itemSounds, \r\n    allSounds.lastHitSounds, \r\n    allSounds.neutralSounds, \r\n    allSounds.roshanDefinitelySounds, \r\n    allSounds.roshanMaybeSounds, \r\n    allSounds.powerRuneSounds, \r\n    allSounds.siegeWaveSounds,\r\n    allSounds.stackTimeSounds,\r\n    allSounds.outpostSounds,\r\n    allSounds.tomeSounds,\r\n    allSounds.aegisSounds\r\n]","import { allPullSoundBanks, allSoundBanks} from \"./AllSounds\";\r\nimport { AppState } from \"./Interfaces\";\r\n\r\nexport const initialAppState: AppState = {\r\n    time: -73,\r\n    timerShouldTick: false,\r\n    sounds: allSoundBanks,\r\n    pullSounds: allPullSoundBanks,\r\n    roshan: {isDead: false, timeOfDeath: null},\r\n    lane: \"SafeLane\",\r\n    team: \"Radiant\",\r\n    itemGoals: [],\r\n    lastHitGoals: [],\r\n    notificationFeed: []\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const neutralLabelDictionary: { [key: number] : string} = {\r\n    420 : \"Tier 1 neutrals spawned\",\r\n    1020 : \"Tier 2 neutrals spawned\",\r\n    1620 : \"Tier 3 neutrals spawned\",\r\n    2220 : \"Tier 4 neutrals spawned\",\r\n    3600 : \"Tier 5 neutrals spawned\"\r\n}","import { TimerProps } from \"./Interfaces\";\r\nimport { useInterval } from \"./useInterval\";\r\nimport { secondsToTimerFormat } from \"./secondsToTimerFormat\";\r\nimport './Timer.scss';\r\n\r\nexport const Timer = (props: TimerProps) => {\r\n\r\n    useInterval(props.tick, props.shouldTick ? 1000 : null)\r\n\r\n    return (\r\n    <div id=\"timer-container\">\r\n        <div id=\"timer-controls\">\r\n            <button onClick={() => props.rollTimerBackFunction(30)}>&#8249;&#171;</button>\r\n            <button onClick={() => props.rollTimerBackFunction(15)}>&#171;</button>\r\n            <button onClick={() => props.rollTimerBackFunction(1)}>&#8249;</button>\r\n            <div id=\"timer\">{secondsToTimerFormat(props.time)}</div>\r\n            <button onClick={() => props.pushTimerForwardFunction(1)}>&#8250;</button>\r\n            <button onClick={() => props.pushTimerForwardFunction(15)}>&#187;</button>\r\n            <button onClick={() => props.pushTimerForwardFunction(30)}>&#8250;&#187;</button>\r\n        </div>\r\n        <div id=\"pause-button\">\r\n            <button className={props.shouldTick ? \"timer-pause\" : \"timer-play\"} id=\"toggle-timer-button\" onClick={() => props.toggleTimerFunction()}></button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport const useInterval = (intervalFunction: any, interval: any) => {\r\n  const savedIntervalFunction = useRef();\r\n\r\n  useEffect(() => {\r\n    savedIntervalFunction.current = intervalFunction;\r\n  }, [intervalFunction]);\r\n\r\n  useEffect(() => {\r\n    if (interval !== null) {\r\n      const intervalIdentifier = setInterval(() => (savedIntervalFunction as any).current(), interval);\r\n      return () => clearInterval(intervalIdentifier);\r\n    }\r\n  }, [interval]);\r\n}","import { Feed } from 'Feed'\nimport { GoalCustomization } from 'GoalCustomization'\nimport { Lane, SoundType, Team } from 'Interfaces'\nimport React, { useState } from 'react'\nimport { RoleCustomization } from 'RoleCustomization'\nimport { AegisTimer } from 'RoshTimer'\nimport { SoundBankName } from './AllSounds'\nimport './App.scss'\nimport { Customization } from './Customization'\nimport { initialAppState } from './InitialAppState'\nimport { neutralLabelDictionary } from './NeutralLabelDictionary'\nimport { Timer } from './Timer'\n\n//TO IMPLEMENT\n//FEED\n\n//SOUND QUEUING\n//ROSH COUNT\n//INTERCEPT ENEMY PULLS\n//ROLE PRESETS\n//SAVABLE CONFIG\n//SAVE STATE ON BROWSER CLOSE\n//TTS LIBRARY\n\n//73 second game start timer \n\nexport const App = () => {\n\n    const [state, setState] = useState(initialAppState)\n\n    const isBountyRuneTime = (time: number) => (time / 60) % 5 === 0\n    const isSiegeCreepTime = (time: number) => (time / 60) % 5 === 0\n    const isAghsShardTime = (time: number) => time === 1200\n    const isNeutralItemTime = (time: number) => neutralLabelDictionary[time] !== undefined\n    const isPowerRuneTime = (time: number) => (time > 0 && (time / 60) % 2 === 0)\n    const isTomeTime = (time: number) => (time > 0 && (time / 60) % 10 === 0)\n    const isOutpostTime = (time: number) => (time > 0 && (time / 60) % 10 === 0)\n    const isStackTime = (time: number) => (time > 60) && (time - (Math.floor(time / 60)) * 60) === 45\n    const isRoshanEarliestTime = (time: number) => state.roshan.isDead && state.roshan.timeOfDeath! + 480 === time\n    const isRoshanLatestTime = (time: number) => state.roshan.isDead && state.roshan.timeOfDeath! + 660 === time\n    const aegisHasExpired = (time: number) => state.roshan.isDead && state.roshan.timeOfDeath! + 300 === time\n    const isItemTime = (time: number) => state.itemGoals.filter(g => g.time === time).length > 0\n    const isLastHitGoalTime = (time: number) => state.lastHitGoals.filter(g => g.time === time).length > 0\n\n    function addNotification(notificationHeading: string, subtext: string) {\n        const newNotification = {notificationHeading: notificationHeading, subtext: subtext, time: state.time}\n        setState(state => ({...state, notificationFeed: [...state.notificationFeed, newNotification]}))\n    }\n\n    function tick() {\n\n        const newTime = state.time + 1\n\n        if (newTime > 60 && newTime < 720) {\n\n            if (state.team === \"Radiant\" && state.lane === \"SafeLane\") {\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (26 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Radiant SafeLane Medium Camp Pull\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 26 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (56 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Radiant SafeLane Medium Camp Pull B\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 56 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (15 - 14)) {\n                    playSoundBankSoundIfEnabled(\"Radiant SafeLane Small Camp Pull\", SoundType.PullSound)\n                    addNotification(\"Pull Small Camp\", \"Pull at 15 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (45 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Radiant SafeLane Small Camp Pull B\", SoundType.PullSound)\n                    addNotification(\"Pull Small Camp\", \"Pull at 45 seconds.\")\n                }\n            }\n\n            if (state.team === \"Radiant\" && state.lane === \"OffLane\") {\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (19 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Radiant OffLane Medium Camp Pull\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 19 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (49 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Radiant OffLane Medium Camp Pull B\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 49 seconds.\")\n                }\n            }\n\n            if (state.team === \"Dire\" && state.lane === \"SafeLane\") {\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (15 - 14)) {\n                    playSoundBankSoundIfEnabled(\"Dire SafeLane Small Camp Pull\", SoundType.PullSound)\n                    addNotification(\"Pull Small Camp\", \"Pull at 15 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (45 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Dire SafeLane Small Camp Pull B\", SoundType.PullSound)\n                    addNotification(\"Pull Small Camp\", \"Pull at 45 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (26 - 14)) {\n                    playSoundBankSoundIfEnabled(\"Dire SafeLane Medium Camp Pull\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 26 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (56 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Dire SafeLane Medium Camp Pull B\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 56 seconds.\")\n                }\n            }\n\n            if (state.team === \"Dire\" && state.lane === \"OffLane\") {\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (17 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Dire OffLane Medium Camp Pull\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 17 seconds.\")\n                }\n\n                if ((newTime - (Math.floor(newTime / 60)) * 60) === (47 - 15)) {\n                    playSoundBankSoundIfEnabled(\"Dire OffLane Medium Camp Pull B\", SoundType.PullSound)\n                    addNotification(\"Pull Medium Camp\", \"Pull at 47 seconds.\")\n                }\n            }\n        }\n\n        if (isItemTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Item Goal\", SoundType.NormalSound)\n            addNotification(\"Item Timing Reached\", \"Did you buy X yet?\")\n        }\n\n        if (isLastHitGoalTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Last Hit Goal\", SoundType.NormalSound)\n            addNotification(\"Item Timing Reached.\", \"Have you purchased ??? YET?\")\n        }\n\n        if (isRoshanEarliestTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Earliest Roshan Spawn Time\", SoundType.NormalSound)\n            addNotification(\"Roshan will spawn in the next 3 minutes.\", \"\")\n        }\n\n        if (isRoshanLatestTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Latest Roshan Spawn Time\", SoundType.NormalSound)\n            setState(state => ({ ...state, roshan: { isDead: false, timeOfDeath: null } }))\n            addNotification(\"Roshan has definitely spawned.\", \"\")\n        }\n\n        if (aegisHasExpired(newTime)) {\n            playSoundBankSoundIfEnabled(\"Aegis has expired\", SoundType.NormalSound)\n            addNotification(\"Aegis has expired\", \"\")\n        }\n\n        if (isOutpostTime(newTime + 60)) {\n            playSoundBankSoundIfEnabled(\"Outpost Time\", SoundType.NormalSound)\n            addNotification(\"Capture the Outpost in 1 minute.\", \"Outpost will give lots of cool shit.\")\n        }\n\n        if (isStackTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Time to stack\", SoundType.NormalSound)\n            addNotification(\"Be prepared for stack time.\", \"Stack camps between XX:53-XX:56 seconds\")\n        }\n\n        if (isPowerRuneTime(newTime + 25)) {\n            playSoundBankSoundIfEnabled(\"Power Rune Spawned\", SoundType.NormalSound)\n            addNotification(\"A power rune has spawned\", \"\")\n        }\n\n        if (isSiegeCreepTime(newTime) && state.time !== 0) {\n            playSoundBankSoundIfEnabled(\"Siege Creep has spawned\", SoundType.NormalSound)\n            addNotification(\"A siege creep has spawned\", \"\")\n        }\n\n        if (isBountyRuneTime(newTime + 20)) {\n            playSoundBankSoundIfEnabled(\"Bounty Rune Spawned\", SoundType.NormalSound)\n            addNotification(\"Bounty Rune will spawn in 20 seconds\", \"It gives lots of gold lol\")\n        }\n\n        if (isAghsShardTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Aghanim's Shard Available\", SoundType.NormalSound)\n            addNotification(\"Aghanim's Shard can now be purchased.\", \"\")\n        }\n\n        if (isNeutralItemTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"New Neutral Items Spawned\", SoundType.NormalSound)\n            addNotification(\"New neutral items are ready to find.\", \"You may find blah blah.\")\n        }\n\n        if (isTomeTime(newTime)) {\n            playSoundBankSoundIfEnabled(\"Tome is ready\", SoundType.NormalSound)\n            addNotification(\"New tome is ready to purchase.\", \"You get X XP YAY\")\n        }\n\n        setState(state => ({ ...state, time: newTime }))\n    }\n\n    function playSoundBankSoundIfEnabled(soundBank: SoundBankName, soundType: SoundType) {\n\n        const soundBankArr = soundType === SoundType.NormalSound ? state.sounds : state.pullSounds\n\n        if (soundBankArr.find(b => b.soundBankTitle === soundBank)!.enabled === true) {\n            soundBankArr.find(s => s.soundBankTitle === soundBank)!.sounds.find(e => e.selected === true)!.sound.play()\n        }\n    }\n\n    function toggleTimer() {\n        const currentState = state.timerShouldTick\n        setState(state => ({ ...state, timerShouldTick: !currentState }))\n    }\n\n    function rollTimerBack(by: number) {\n        const newTime = state.time - by\n        if (newTime < 0) {\n            setState(state => ({ ...state, time: 0 }))\n        } else {\n            setState(state => ({ ...state, time: newTime }))\n        }\n    }\n\n    function pushTimerForward(by: number) {\n        const newTime = state.time + by\n        setState(state => ({ ...state, time: newTime }))\n    }\n\n    function previewButtonPressed(soundBank: string, soundType: SoundType) {\n\n        const soundArr = soundType === SoundType.NormalSound ? state.sounds : state.pullSounds\n        soundArr.find(s => s.soundBankTitle === soundBank)!.sounds.find(s => s.selected === true)!.sound.play()\n    }\n\n    function soundOptionChanged(soundBank: string, changedTo: string, soundType: SoundType) {\n\n        const soundArr = soundType === SoundType.NormalSound ? state.sounds : state.pullSounds\n\n        const bank = soundArr.find(s => s.soundBankTitle === soundBank)!\n        const updatedSoundBank = { ...bank, sounds: bank.sounds.map(s => s.name === changedTo ? { ...s, selected: true } : { ...s, selected: false }) }\n\n        if (soundType === SoundType.NormalSound) {\n            setState(state => ({ ...state, sounds: state.sounds.map(b => b.soundBankTitle === soundBank ? updatedSoundBank : b) }))\n        } else {\n            setState(state => ({ ...state, pullSounds: state.pullSounds.map(b => b.soundBankTitle === soundBank ? updatedSoundBank : b) }))\n        }\n    }\n\n    function soundEnabledToggled(soundBank: string, soundType: SoundType, isChecked: boolean) {\n        console.log(arguments)\n        const soundArr = soundType === SoundType.NormalSound ? state.sounds : state.pullSounds\n        const bank = soundArr.find(s => s.soundBankTitle === soundBank)!\n        const updatedSoundBank = { ...bank, enabled: isChecked }\n        console.log(bank, updatedSoundBank, state)\n        if (soundType === SoundType.NormalSound) {\n            setState(state => ({ ...state, sounds: state.sounds.map(b => b.soundBankTitle === soundBank ? updatedSoundBank : b) }))\n        } else {\n            setState(state => ({ ...state, pullSounds: state.pullSounds.map(b => b.soundBankTitle === soundBank ? updatedSoundBank : b) }))\n        }\n    }\n\n    function getRoshanTimerTime() {\n        if (!state.roshan.isDead) {\n            return 0\n        } else {\n            return state.time - state.roshan.timeOfDeath!\n        }\n    }\n\n    function roshanResetButtonPressed() {\n        const newRoshanState = { isDead: false, timeOfDeath: null }\n        setState(state => ({ ...state, roshan: newRoshanState }))\n    }\n\n    function roshanDiedButtonWasPressed() {\n        const newRoshanState = { isDead: true, timeOfDeath: state.time }\n        setState(state => ({ ...state, roshan: newRoshanState }))\n    }\n\n    function itemGoalDeleteButtonWasPressed(index: number) {\n        const newItemGoals = state.itemGoals.filter((_, i) => i !== index)\n        setState(state => ({ ...state, itemGoals: newItemGoals }))\n    }\n\n    function addItemGoalButtonWasPressed(item: string, time: number) {\n        const newItemGoalsArray = [...state.itemGoals, { item: item, time: time }]\n        setState(state => ({ ...state, itemGoals: newItemGoalsArray }))\n    }\n\n    function lastHitGoalDeleteButtonWasPressed(index: number) {\n        const newLastHitGoals = state.lastHitGoals.filter((_, i) => i !== index)\n        setState(state => ({ ...state, lastHitGoals: newLastHitGoals }))\n    }\n\n    function addLastHitGoalButtonWasPressed(lastHitGoal: number, time: number) {\n        const newlastHitGoalsArray = [...state.lastHitGoals, { lastHits: lastHitGoal, time: time }]\n        setState(state => ({ ...state, lastHitGoals: newlastHitGoalsArray }))\n    }\n\n    function changeLane(to: Lane) {\n        setState(state => ({ ...state, lane: to }))\n    }\n\n    function changeTeam(to: Team) {\n        setState(state => ({ ...state, team: to }))\n    }\n\n    return (\n        <div>\n            <Timer\n                time={state.time}\n                shouldTick={state.timerShouldTick}\n                tick={tick}\n                rollTimerBackFunction={rollTimerBack}\n                pushTimerForwardFunction={pushTimerForward}\n                toggleTimerFunction={toggleTimer}\n            />\n            <Feed notificationFeed={state.notificationFeed}></Feed>\n            <div id=\"side-bar\">\n            <h1 id=\"settings-heading\">Settings</h1>\n            <RoleCustomization lane={state.lane} team={state.team} setLaneFunction={changeLane} setTeamFunction={changeTeam}></RoleCustomization>\n            <hr id=\"top-line\"></hr>\n            <Customization allPullSoundBanks={state.pullSounds} team={state.team} lane={state.lane} allSoundBanks={state.sounds} previewButtonPressed={previewButtonPressed} soundOptionChanged={soundOptionChanged} soundEnableToggled={soundEnabledToggled}></Customization>\n            <GoalCustomization lastHitGoalDeleteButtonWasPressed={lastHitGoalDeleteButtonWasPressed} addLastHitGoalButtonWasPressed={addLastHitGoalButtonWasPressed} addItemGoalButtonWasPressed={addItemGoalButtonWasPressed} itemGoalDeleteButtonWasPressed={itemGoalDeleteButtonWasPressed} itemGoals={state.itemGoals} lastHitGoals={state.lastHitGoals}></GoalCustomization>\n            <AegisTimer roshanResetButtonPressed={roshanResetButtonPressed} roshanDiedButtonWasPressed={roshanDiedButtonWasPressed} roshanTimerTime={getRoshanTimerTime()}></AegisTimer>\n            </div>        \n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Object.keys(array)\n\n\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}